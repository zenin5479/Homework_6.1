using System;
using System.IO;
using System.Text;

// Обработка студенческой ведомости
// Составить программу для обработки информации о студентах какого-то факультета
// Каждый студент характеризуется совокупностью признаков: группа; фамилия, имя, отчество; год рождения; пол; оценка по физике; оценка по математике; оценка по информатике; стипендия
// Выбор типа исходных и выходных данных зависит от языка программирования
// Можно рассмотреть вариант, соответствующий объекту: структура
// Кроме того, рассмотреть разные способы ввода/вывода: с клавиатуры/на экран, с использованием файлов (текстовых, типизированных, бинарных)
// При работе с файлами первая программа создаёт файл, а вторая его обрабатывает
// Программы следует писать при условии, что файл целиком во внутреннюю память разместить невозможно
// При решении можно использовать стандартные классы
// Вычислить средний балл всех студентов по всем предметам
// Вывести фамилии и имена студентов, средний балл которых больше, чем общий средний балл

namespace Homework_6._1
{
   struct Student
   {
      char group;
      char surname;
      char name;
      char dadsname;
      int year;
      char gender;
      int physics;
      int math;
      int inf;
      float grant;
   };

   internal class Program
   {
      static void Main(string[] args)
      {
         //string path = "spisok.txt";
         //string[] originalText =
         //{
         //   "IP-21; Иванов Иван Иванович; 2000; М; 4; 5; 3; 5000\n" +
         //   "IP-21; Петрова Анна Сергеевна; 2001; Ж; 5; 4; 5; 6000\n" +
         //   "IP-22; Смирнов Алексей Викторович; 1999; М; 3; 4; 4; 4000\n" +
         //   "Fiz-21; Кузнецова Мария Павловна; 2000; Ж; 5; 5; 5; 7000\n" +
         //   "Phys-22; Сидоров Дмитрий Андреевич; 2001; М; 4; 3; 4; 4500\n" +
         //   "IP-22; Васильева Екатерина Николаевна; 2009; Ж; 3; 5; 4; 5500\n" +
         //   "Fiz-21; Орлов Сергей Владимирович; 2000; М; 4; 4; 3; 3000\n" +
         //   "IP-21; Лебедева Светлана Александровна; Ж; 2001; 5; 5; 5; 8000\n" +
         //   "Fiz-22; Николаев Андрей Сергеевич; 2007; М; 3; 2; 3; 2500\n" +
         //   "IP-22; Сергеева Дарья Викторовна; 2007; Ж; 2; 2; 2; 5000"
         //};

         //// Запись ведомости
         //File.WriteAllLines(path, originalText, Encoding.UTF8);
         //// Чтение файла
         //string[] fileText = File.ReadAllLines(path, Encoding.UTF8);
         //int i = 0;
         //while (i < fileText.Length)
         //{
         //   string s = fileText[i];
         //   Console.WriteLine(s);
         //   i++; 
         //}
         
         // Путь к файлу
         string path = "input.txt";
         // Строка для записи
         string originalText =
            "IP-21; Иванов Иван Иванович; 2000; М; 4; 5; 3; 5000" +
            "IP-21; Петрова Анна Сергеевна; 2001; Ж; 5; 4; 5; 6000\n" +
            "IP-22; Смирнов Алексей Викторович; 1999; М; 3; 4; 4; 4000\n" +
            "Fiz-21; Кузнецова Мария Павловна; 2000; Ж; 5; 5; 5; 7000\n" +
            "Phys-22; Сидоров Дмитрий Андреевич; 2001; М; 4; 3; 4; 4500\n" +
            "IP-22; Васильева Екатерина Николаевна; 2009; Ж; 3; 5; 4; 5500\n" +
            "Fiz-21; Орлов Сергей Владимирович; 2000; М; 4; 4; 3; 3000\n" +
            "IP-21; Лебедева Светлана Александровна; Ж; 2001; 5; 5; 5; 8000\n" +
            "Fiz-22; Николаев Андрей Сергеевич; 2007; М; 3; 2; 3; 2500\n" +
            "IP-22; Сергеева Дарья Викторовна; 2007; Ж; 2; 2; 2; 5000";
         
         byte[] data = Encoding.GetEncoding(1251).GetBytes(originalText);
         // Запись ведомости
         File.WriteAllBytes(path, data);
         // Чтение файла
         string[] fileText = File.ReadAllLines(path, Encoding.GetEncoding(1251));
         int i = 0;
         while (i < fileText.Length)
         {
            string s = fileText[i];
            Console.WriteLine(s);
            i++; 
         }

         //// Запись в файл
         //using (FileStream fstream = new FileStream(path, FileMode.OpenOrCreate))
         //{
         //   // Преобразуем строку в байты
         //   byte[] buffer = Encoding.Default.GetBytes(originalText);
         //   // Запись массива байтов в файл
         //   fstream.Write(buffer, 0, buffer.Length);
         //   Console.WriteLine("Текст записан в файл");
         //}

         //// Чтение из файла
         //using (FileStream fstream = File.OpenRead(path))
         //{
         //   // Выделяем массив для считывания данных из файла
         //   byte[] buffer = new byte[fstream.Length];
         //   // Считываем данные
         //   int read = fstream.Read(buffer, 0, buffer.Length);
         //   // Декодируем байты в строку
         //   string textFromFile = Encoding.Default.GetString(buffer);
         //   Console.WriteLine("Текст из файла:\n{0}", textFromFile);
         //}

         Console.ReadKey();
      }
   }
}